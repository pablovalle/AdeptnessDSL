/*
 * generated by Xtext 2.24.0
 */
grammar InternalAdeptness;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.AdeptnessGrammarAccess;

}
@parser::members {
	private AdeptnessGrammarAccess grammarAccess;

	public void setGrammarAccess(AdeptnessGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAdeptness
entryRuleAdeptness
:
{ before(grammarAccess.getAdeptnessRule()); }
	 ruleAdeptness
{ after(grammarAccess.getAdeptnessRule()); } 
	 EOF 
;

// Rule Adeptness
ruleAdeptness 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdeptnessAccess().getElementsAssignment()); }
		(rule__Adeptness__ElementsAssignment)*
		{ after(grammarAccess.getAdeptnessAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImports
entryRuleImports
:
{ before(grammarAccess.getImportsRule()); }
	 ruleImports
{ after(grammarAccess.getImportsRule()); } 
	 EOF 
;

// Rule Imports
ruleImports 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportsAccess().getGroup()); }
		(rule__Imports__Group__0)
		{ after(grammarAccess.getImportsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonitoringFile
entryRuleMonitoringFile
:
{ before(grammarAccess.getMonitoringFileRule()); }
	 ruleMonitoringFile
{ after(grammarAccess.getMonitoringFileRule()); } 
	 EOF 
;

// Rule MonitoringFile
ruleMonitoringFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitoringFileAccess().getGroup()); }
		(rule__MonitoringFile__Group__0)
		{ after(grammarAccess.getMonitoringFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonitoringPlan
entryRuleMonitoringPlan
:
{ before(grammarAccess.getMonitoringPlanRule()); }
	 ruleMonitoringPlan
{ after(grammarAccess.getMonitoringPlanRule()); } 
	 EOF 
;

// Rule MonitoringPlan
ruleMonitoringPlan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitoringPlanAccess().getMonitoringVariablesAssignment()); }
		(rule__MonitoringPlan__MonitoringVariablesAssignment)
		{ after(grammarAccess.getMonitoringPlanAccess().getMonitoringVariablesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMonitoringVariable
entryRuleMonitoringVariable
:
{ before(grammarAccess.getMonitoringVariableRule()); }
	 ruleMonitoringVariable
{ after(grammarAccess.getMonitoringVariableRule()); } 
	 EOF 
;

// Rule MonitoringVariable
ruleMonitoringVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMonitoringVariableAccess().getGroup()); }
		(rule__MonitoringVariable__Group__0)
		{ after(grammarAccess.getMonitoringVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSig_type
entryRuleSig_type
:
{ before(grammarAccess.getSig_typeRule()); }
	 ruleSig_type
{ after(grammarAccess.getSig_typeRule()); } 
	 EOF 
;

// Rule Sig_type
ruleSig_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSig_typeAccess().getAlternatives()); }
		(rule__Sig_type__Alternatives)
		{ after(grammarAccess.getSig_typeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignal
entryRuleSignal
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignalAccess().getGroup()); }
		(rule__Signal__Group__0)
		{ after(grammarAccess.getSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOracle
entryRuleOracle
:
{ before(grammarAccess.getOracleRule()); }
	 ruleOracle
{ after(grammarAccess.getOracleRule()); } 
	 EOF 
;

// Rule Oracle
ruleOracle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOracleAccess().getGroup()); }
		(rule__Oracle__Group__0)
		{ after(grammarAccess.getOracleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChecks
entryRuleChecks
:
{ before(grammarAccess.getChecksRule()); }
	 ruleChecks
{ after(grammarAccess.getChecksRule()); } 
	 EOF 
;

// Rule Checks
ruleChecks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChecksAccess().getGroup()); }
		(rule__Checks__Group__0)
		{ after(grammarAccess.getChecksAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDescription
entryRuleDescription
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDescriptionAccess().getGroup()); }
		(rule__Description__Group__0)
		{ after(grammarAccess.getDescriptionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFailReason
entryRuleFailReason
:
{ before(grammarAccess.getFailReasonRule()); }
	 ruleFailReason
{ after(grammarAccess.getFailReasonRule()); } 
	 EOF 
;

// Rule FailReason
ruleFailReason 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFailReasonAccess().getGroup()); }
		(rule__FailReason__Group__0)
		{ after(grammarAccess.getFailReasonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReason
entryRuleReason
:
{ before(grammarAccess.getReasonRule()); }
	 ruleReason
{ after(grammarAccess.getReasonRule()); } 
	 EOF 
;

// Rule Reason
ruleReason 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReasonAccess().getGroup()); }
		(rule__Reason__Group__0)
		{ after(grammarAccess.getReasonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXPeaks
entryRuleXPeaks
:
{ before(grammarAccess.getXPeaksRule()); }
	 ruleXPeaks
{ after(grammarAccess.getXPeaksRule()); } 
	 EOF 
;

// Rule XPeaks
ruleXPeaks 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXPeaksAccess().getGroup()); }
		(rule__XPeaks__Group__0)
		{ after(grammarAccess.getXPeaksAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstDeg
entryRuleConstDeg
:
{ before(grammarAccess.getConstDegRule()); }
	 ruleConstDeg
{ after(grammarAccess.getConstDegRule()); } 
	 EOF 
;

// Rule ConstDeg
ruleConstDeg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstDegAccess().getGroup()); }
		(rule__ConstDeg__Group__0)
		{ after(grammarAccess.getConstDegAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHighTime
entryRuleHighTime
:
{ before(grammarAccess.getHighTimeRule()); }
	 ruleHighTime
{ after(grammarAccess.getHighTimeRule()); } 
	 EOF 
;

// Rule HighTime
ruleHighTime 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHighTimeAccess().getGroup()); }
		(rule__HighTime__Group__0)
		{ after(grammarAccess.getHighTimeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHighPeak
entryRuleHighPeak
:
{ before(grammarAccess.getHighPeakRule()); }
	 ruleHighPeak
{ after(grammarAccess.getHighPeakRule()); } 
	 EOF 
;

// Rule HighPeak
ruleHighPeak 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHighPeakAccess().getGroup()); }
		(rule__HighPeak__Group__0)
		{ after(grammarAccess.getHighPeakAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getGroup()); }
		(rule__Reference__Group__0)
		{ after(grammarAccess.getReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpper
entryRuleUpper
:
{ before(grammarAccess.getUpperRule()); }
	 ruleUpper
{ after(grammarAccess.getUpperRule()); } 
	 EOF 
;

// Rule Upper
ruleUpper 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpperAccess().getGroup()); }
		(rule__Upper__Group__0)
		{ after(grammarAccess.getUpperAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLower
entryRuleLower
:
{ before(grammarAccess.getLowerRule()); }
	 ruleLower
{ after(grammarAccess.getLowerRule()); } 
	 EOF 
;

// Rule Lower
ruleLower 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLowerAccess().getGroup()); }
		(rule__Lower__Group__0)
		{ after(grammarAccess.getLowerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRange
entryRuleRange
:
{ before(grammarAccess.getRangeRule()); }
	 ruleRange
{ after(grammarAccess.getRangeRule()); } 
	 EOF 
;

// Rule Range
ruleRange 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeAccess().getGroup()); }
		(rule__Range__Group__0)
		{ after(grammarAccess.getRangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGap
entryRuleGap
:
{ before(grammarAccess.getGapRule()); }
	 ruleGap
{ after(grammarAccess.getGapRule()); } 
	 EOF 
;

// Rule Gap
ruleGap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGapAccess().getGroup()); }
		(rule__Gap__Group__0)
		{ after(grammarAccess.getGapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBound_up
entryRuleBound_up
:
{ before(grammarAccess.getBound_upRule()); }
	 ruleBound_up
{ after(grammarAccess.getBound_upRule()); } 
	 EOF 
;

// Rule Bound_up
ruleBound_up 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBound_upAccess().getValueAssignment()); }
		(rule__Bound_up__ValueAssignment)
		{ after(grammarAccess.getBound_upAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBound_Down
entryRuleBound_Down
:
{ before(grammarAccess.getBound_DownRule()); }
	 ruleBound_Down
{ after(grammarAccess.getBound_DownRule()); } 
	 EOF 
;

// Rule Bound_Down
ruleBound_Down 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBound_DownAccess().getValueAssignment()); }
		(rule__Bound_Down__ValueAssignment)
		{ after(grammarAccess.getBound_DownAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getBoolAssignment()); }
		(rule__BOOLEAN__BoolAssignment)
		{ after(grammarAccess.getBOOLEANAccess().getBoolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb
entryRuleb
:
{ before(grammarAccess.getBRule()); }
	 ruleb
{ after(grammarAccess.getBRule()); } 
	 EOF 
;

// Rule b
ruleb 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBAccess().getAlternatives()); }
		(rule__B__Alternatives)
		{ after(grammarAccess.getBAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDValAssignment()); }
		(rule__DOUBLE__DValAssignment)
		{ after(grammarAccess.getDOUBLEAccess().getDValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuled
entryRuled
:
{ before(grammarAccess.getDRule()); }
	 ruled
{ after(grammarAccess.getDRule()); } 
	 EOF 
;

// Rule d
ruled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDAccess().getGroup()); }
		(rule__D__Group__0)
		{ after(grammarAccess.getDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeType
entryRuleTimeType
:
{ before(grammarAccess.getTimeTypeRule()); }
	 ruleTimeType
{ after(grammarAccess.getTimeTypeRule()); } 
	 EOF 
;

// Rule TimeType
ruleTimeType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeTypeAccess().getAlternatives()); }
		(rule__TimeType__Alternatives)
		{ after(grammarAccess.getTimeTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
		rulePackageDeclaration
		{ after(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
		ruleType
		{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getImportsParserRuleCall_2()); }
		ruleImports
		{ after(grammarAccess.getAbstractElementAccess().getImportsParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSignalParserRuleCall_1()); }
		ruleSignal
		{ after(grammarAccess.getTypeAccess().getSignalParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getMonitoringFileParserRuleCall_2()); }
		ruleMonitoringFile
		{ after(grammarAccess.getTypeAccess().getMonitoringFileParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sig_type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeAssignment_0()); }
		(rule__Sig_type__Sig_typeAssignment_0)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeAssignment_1()); }
		(rule__Sig_type__Sig_typeAssignment_1)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeAssignment_2()); }
		(rule__Sig_type__Sig_typeAssignment_2)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasonAccess().getHighPeakAssignment_0_0()); }
		(rule__Reason__HighPeakAssignment_0_0)
		{ after(grammarAccess.getReasonAccess().getHighPeakAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReasonAccess().getHighTimeAssignment_0_1()); }
		(rule__Reason__HighTimeAssignment_0_1)
		{ after(grammarAccess.getReasonAccess().getHighTimeAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getReasonAccess().getConstDegAssignment_0_2()); }
		(rule__Reason__ConstDegAssignment_0_2)
		{ after(grammarAccess.getReasonAccess().getConstDegAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getReasonAccess().getXPeaksAssignment_0_3()); }
		(rule__Reason__XPeaksAssignment_0_3)
		{ after(grammarAccess.getReasonAccess().getXPeaksAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getUpperAssignment_0_0()); }
		(rule__Reference__UpperAssignment_0_0)
		{ after(grammarAccess.getReferenceAccess().getUpperAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getLowerAssignment_0_1()); }
		(rule__Reference__LowerAssignment_0_1)
		{ after(grammarAccess.getReferenceAccess().getLowerAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getRangeAssignment_0_2()); }
		(rule__Reference__RangeAssignment_0_2)
		{ after(grammarAccess.getReferenceAccess().getRangeAssignment_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getGapAssignment_0_3()); }
		(rule__Reference__GapAssignment_0_3)
		{ after(grammarAccess.getReferenceAccess().getGapAssignment_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeAssignment_0()); }
		(rule__TimeType__TimeAssignment_0)
		{ after(grammarAccess.getTimeTypeAccess().getTimeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeAssignment_1()); }
		(rule__TimeType__TimeAssignment_1)
		{ after(grammarAccess.getTimeTypeAccess().getTimeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeAssignment_2()); }
		(rule__TimeType__TimeAssignment_2)
		{ after(grammarAccess.getTimeTypeAccess().getTimeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeAssignment_3()); }
		(rule__TimeType__TimeAssignment_3)
		{ after(grammarAccess.getTimeTypeAccess().getTimeAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__0__Impl
	rule__Imports__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportsAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Imports__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
	(rule__Imports__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportsAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitoringFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringFile__Group__0__Impl
	rule__MonitoringFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringFileAccess().getMONITORINGPLANKeyword_0()); }
	'MONITORINGPLAN'
	{ after(grammarAccess.getMonitoringFileAccess().getMONITORINGPLANKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringFile__Group__1__Impl
	rule__MonitoringFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringFileAccess().getNameAssignment_1()); }
	(rule__MonitoringFile__NameAssignment_1)
	{ after(grammarAccess.getMonitoringFileAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringFile__Group__2__Impl
	rule__MonitoringFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringFileAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getMonitoringFileAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringFile__Group__3__Impl
	rule__MonitoringFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMonitoringFileAccess().getMonitoringPlanAssignment_3()); }
		(rule__MonitoringFile__MonitoringPlanAssignment_3)
		{ after(grammarAccess.getMonitoringFileAccess().getMonitoringPlanAssignment_3()); }
	)
	(
		{ before(grammarAccess.getMonitoringFileAccess().getMonitoringPlanAssignment_3()); }
		(rule__MonitoringFile__MonitoringPlanAssignment_3)*
		{ after(grammarAccess.getMonitoringFileAccess().getMonitoringPlanAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringFileAccess().getENDMONITORINGPLANKeyword_4()); }
	'ENDMONITORINGPLAN'
	{ after(grammarAccess.getMonitoringFileAccess().getENDMONITORINGPLANKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitoringVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__0__Impl
	rule__MonitoringVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMONITORKeyword_0()); }
	'MONITOR'
	{ after(grammarAccess.getMonitoringVariableAccess().getMONITORKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__1__Impl
	rule__MonitoringVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getNameAssignment_1()); }
	(rule__MonitoringVariable__NameAssignment_1)
	{ after(grammarAccess.getMonitoringVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__2__Impl
	rule__MonitoringVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getMonitoringVariableAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__3__Impl
	rule__MonitoringVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getTypeKeyword_3()); }
	'type'
	{ after(grammarAccess.getMonitoringVariableAccess().getTypeKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__4__Impl
	rule__MonitoringVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getMonitoringVariableAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__5__Impl
	rule__MonitoringVariable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMonitoringVariableDatatypeAssignment_5()); }
	(rule__MonitoringVariable__MonitoringVariableDatatypeAssignment_5)
	{ after(grammarAccess.getMonitoringVariableAccess().getMonitoringVariableDatatypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__6__Impl
	rule__MonitoringVariable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getGroup_6()); }
	(rule__MonitoringVariable__Group_6__0)?
	{ after(grammarAccess.getMonitoringVariableAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getENDMONITORKeyword_7()); }
	'ENDMONITOR'
	{ after(grammarAccess.getMonitoringVariableAccess().getENDMONITORKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MonitoringVariable__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__0__Impl
	rule__MonitoringVariable__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMaxKeyword_6_0()); }
	'max'
	{ after(grammarAccess.getMonitoringVariableAccess().getMaxKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__1__Impl
	rule__MonitoringVariable__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getColonKeyword_6_1()); }
	':'
	{ after(grammarAccess.getMonitoringVariableAccess().getColonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__2__Impl
	rule__MonitoringVariable__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMaxAssignment_6_2()); }
	(rule__MonitoringVariable__MaxAssignment_6_2)
	{ after(grammarAccess.getMonitoringVariableAccess().getMaxAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__3__Impl
	rule__MonitoringVariable__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMinKeyword_6_3()); }
	'min'
	{ after(grammarAccess.getMonitoringVariableAccess().getMinKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__4__Impl
	rule__MonitoringVariable__Group_6__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getColonKeyword_6_4()); }
	':'
	{ after(grammarAccess.getMonitoringVariableAccess().getColonKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MonitoringVariable__Group_6__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__Group_6__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMonitoringVariableAccess().getMinAssignment_6_5()); }
	(rule__MonitoringVariable__MinAssignment_6_5)
	{ after(grammarAccess.getMonitoringVariableAccess().getMinAssignment_6_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__0__Impl
	rule__Signal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCPSKeyword_0()); }
	'CPS'
	{ after(grammarAccess.getSignalAccess().getCPSKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__1__Impl
	rule__Signal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getNameAssignment_1()); }
	(rule__Signal__NameAssignment_1)
	{ after(grammarAccess.getSignalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__2__Impl
	rule__Signal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getSignalAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__3__Impl
	rule__Signal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getGroup_3()); }
	(rule__Signal__Group_3__0)?
	{ after(grammarAccess.getSignalAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__4__Impl
	rule__Signal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSignalAccess().getOracleAssignment_4()); }
		(rule__Signal__OracleAssignment_4)
		{ after(grammarAccess.getSignalAccess().getOracleAssignment_4()); }
	)
	(
		{ before(grammarAccess.getSignalAccess().getOracleAssignment_4()); }
		(rule__Signal__OracleAssignment_4)*
		{ after(grammarAccess.getSignalAccess().getOracleAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getENDCPSKeyword_5()); }
	'ENDCPS'
	{ after(grammarAccess.getSignalAccess().getENDCPSKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3__0__Impl
	rule__Signal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getImplementsKeyword_3_0()); }
	'implements'
	{ after(grammarAccess.getSignalAccess().getImplementsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getSuperTypeAssignment_3_1()); }
	(rule__Signal__SuperTypeAssignment_3_1)
	{ after(grammarAccess.getSignalAccess().getSuperTypeAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Oracle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oracle__Group__0__Impl
	rule__Oracle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOracleAccess().getORACLEKeyword_0()); }
	'ORACLE'
	{ after(grammarAccess.getOracleAccess().getORACLEKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oracle__Group__1__Impl
	rule__Oracle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOracleAccess().getNameAssignment_1()); }
	(rule__Oracle__NameAssignment_1)
	{ after(grammarAccess.getOracleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oracle__Group__2__Impl
	rule__Oracle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOracleAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getOracleAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oracle__Group__3__Impl
	rule__Oracle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getOracleAccess().getCheckAssignment_3()); }
		(rule__Oracle__CheckAssignment_3)
		{ after(grammarAccess.getOracleAccess().getCheckAssignment_3()); }
	)
	(
		{ before(grammarAccess.getOracleAccess().getCheckAssignment_3()); }
		(rule__Oracle__CheckAssignment_3)*
		{ after(grammarAccess.getOracleAccess().getCheckAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Oracle__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOracleAccess().getENDORACLEKeyword_4()); }
	'ENDORACLE'
	{ after(grammarAccess.getOracleAccess().getENDORACLEKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checks__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checks__Group__0__Impl
	rule__Checks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChecksAccess().getChecksKeyword_0()); }
	'checks:'
	{ after(grammarAccess.getChecksAccess().getChecksKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checks__Group__1__Impl
	rule__Checks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChecksAccess().getNameAssignment_1()); }
	(rule__Checks__NameAssignment_1)
	{ after(grammarAccess.getChecksAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checks__Group__2__Impl
	rule__Checks__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChecksAccess().getReferenceAssignment_2()); }
	(rule__Checks__ReferenceAssignment_2)
	{ after(grammarAccess.getChecksAccess().getReferenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checks__Group__3__Impl
	rule__Checks__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getChecksAccess().getFailReasonAssignment_3()); }
		(rule__Checks__FailReasonAssignment_3)
		{ after(grammarAccess.getChecksAccess().getFailReasonAssignment_3()); }
	)
	(
		{ before(grammarAccess.getChecksAccess().getFailReasonAssignment_3()); }
		(rule__Checks__FailReasonAssignment_3)*
		{ after(grammarAccess.getChecksAccess().getFailReasonAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checks__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChecksAccess().getDescriptionAssignment_4()); }
	(rule__Checks__DescriptionAssignment_4)
	{ after(grammarAccess.getChecksAccess().getDescriptionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
	'Description: '
	{ after(grammarAccess.getDescriptionAccess().getDescriptionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Description__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDescriptionAccess().getValueAssignment_1()); }
	(rule__Description__ValueAssignment_1)
	{ after(grammarAccess.getDescriptionAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FailReason__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailReason__Group__0__Impl
	rule__FailReason__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FailReason__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailReasonAccess().getFailsIfKeyword_0()); }
	'fails if :'
	{ after(grammarAccess.getFailReasonAccess().getFailsIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailReason__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FailReason__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FailReason__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFailReasonAccess().getReasonAssignment_1()); }
	(rule__FailReason__ReasonAssignment_1)
	{ after(grammarAccess.getFailReasonAccess().getReasonAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reason__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reason__Group__0__Impl
	rule__Reason__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasonAccess().getAlternatives_0()); }
	(rule__Reason__Alternatives_0)
	{ after(grammarAccess.getReasonAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reason__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReasonAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getReasonAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XPeaks__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__0__Impl
	rule__XPeaks__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getConfidenceIsBelowKeyword_0()); }
	'confidence is below'
	{ after(grammarAccess.getXPeaksAccess().getConfidenceIsBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__1__Impl
	rule__XPeaks__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getCantAssignment_1()); }
	(rule__XPeaks__CantAssignment_1)
	{ after(grammarAccess.getXPeaksAccess().getCantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__2__Impl
	rule__XPeaks__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getMoreThanKeyword_2()); }
	'more than'
	{ after(grammarAccess.getXPeaksAccess().getMoreThanKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__3__Impl
	rule__XPeaks__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getNPeaksAssignment_3()); }
	(rule__XPeaks__NPeaksAssignment_3)
	{ after(grammarAccess.getXPeaksAccess().getNPeaksAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__4__Impl
	rule__XPeaks__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getTimesWithinKeyword_4()); }
	'times within'
	{ after(grammarAccess.getXPeaksAccess().getTimesWithinKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__5__Impl
	rule__XPeaks__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getTimeAssignment_5()); }
	(rule__XPeaks__TimeAssignment_5)
	{ after(grammarAccess.getXPeaksAccess().getTimeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XPeaks__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXPeaksAccess().getUnitAssignment_6()); }
	(rule__XPeaks__UnitAssignment_6)
	{ after(grammarAccess.getXPeaksAccess().getUnitAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstDeg__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDeg__Group__0__Impl
	rule__ConstDeg__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDeg__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDegAccess().getConfidenceIsInConstantDegradationKeyword_0()); }
	'confidence is in constant degradation'
	{ after(grammarAccess.getConstDegAccess().getConfidenceIsInConstantDegradationKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDeg__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstDeg__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDeg__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstDegAccess().getCantAssignment_1()); }
	(rule__ConstDeg__CantAssignment_1)
	{ after(grammarAccess.getConstDegAccess().getCantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighTime__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighTime__Group__0__Impl
	rule__HighTime__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighTimeAccess().getConfidenceIsBelowKeyword_0()); }
	'confidence is below'
	{ after(grammarAccess.getHighTimeAccess().getConfidenceIsBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighTime__Group__1__Impl
	rule__HighTime__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighTimeAccess().getCantAssignment_1()); }
	(rule__HighTime__CantAssignment_1)
	{ after(grammarAccess.getHighTimeAccess().getCantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighTime__Group__2__Impl
	rule__HighTime__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighTimeAccess().getWithinKeyword_2()); }
	'within'
	{ after(grammarAccess.getHighTimeAccess().getWithinKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighTime__Group__3__Impl
	rule__HighTime__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighTimeAccess().getTimeAssignment_3()); }
	(rule__HighTime__TimeAssignment_3)
	{ after(grammarAccess.getHighTimeAccess().getTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighTime__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighTimeAccess().getUnitAssignment_4()); }
	(rule__HighTime__UnitAssignment_4)
	{ after(grammarAccess.getHighTimeAccess().getUnitAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HighPeak__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighPeak__Group__0__Impl
	rule__HighPeak__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HighPeak__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighPeakAccess().getConfidenceIsBelowKeyword_0()); }
	'confidence is below'
	{ after(grammarAccess.getHighPeakAccess().getConfidenceIsBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighPeak__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__HighPeak__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HighPeak__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHighPeakAccess().getCantAssignment_1()); }
	(rule__HighPeak__CantAssignment_1)
	{ after(grammarAccess.getHighPeakAccess().getCantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getAlternatives_0()); }
	(rule__Reference__Alternatives_0)
	{ after(grammarAccess.getReferenceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Reference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReferenceAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getReferenceAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Upper__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upper__Group__0__Impl
	rule__Upper__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Upper__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperAccess().getIsBelowKeyword_0()); }
	'is below'
	{ after(grammarAccess.getUpperAccess().getIsBelowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upper__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Upper__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Upper__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpperAccess().getBound_uppAssignment_1()); }
	(rule__Upper__Bound_uppAssignment_1)
	{ after(grammarAccess.getUpperAccess().getBound_uppAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Lower__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lower__Group__0__Impl
	rule__Lower__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Lower__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerAccess().getIsAboveKeyword_0()); }
	'is above'
	{ after(grammarAccess.getLowerAccess().getIsAboveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lower__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Lower__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Lower__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLowerAccess().getBound_lowerAssignment_1()); }
	(rule__Lower__Bound_lowerAssignment_1)
	{ after(grammarAccess.getLowerAccess().getBound_lowerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__0__Impl
	rule__Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getIsInRangeBetweenKeyword_0()); }
	'is in range between'
	{ after(grammarAccess.getRangeAccess().getIsInRangeBetweenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__1__Impl
	rule__Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getBound_lowerAssignment_1()); }
	(rule__Range__Bound_lowerAssignment_1)
	{ after(grammarAccess.getRangeAccess().getBound_lowerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__2__Impl
	rule__Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getAndKeyword_2()); }
	'and'
	{ after(grammarAccess.getRangeAccess().getAndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Range__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeAccess().getBound_uppAssignment_3()); }
	(rule__Range__Bound_uppAssignment_3)
	{ after(grammarAccess.getRangeAccess().getBound_uppAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gap__Group__0__Impl
	rule__Gap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGapAccess().getNotInRangeBetweenKeyword_0()); }
	'not in range between'
	{ after(grammarAccess.getGapAccess().getNotInRangeBetweenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gap__Group__1__Impl
	rule__Gap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGapAccess().getBound_lowerAssignment_1()); }
	(rule__Gap__Bound_lowerAssignment_1)
	{ after(grammarAccess.getGapAccess().getBound_lowerAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gap__Group__2__Impl
	rule__Gap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGapAccess().getAndKeyword_2()); }
	'and'
	{ after(grammarAccess.getGapAccess().getAndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gap__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGapAccess().getBound_uppAssignment_3()); }
	(rule__Gap__Bound_uppAssignment_3)
	{ after(grammarAccess.getGapAccess().getBound_uppAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__D__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__0__Impl
	rule__D__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getDAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__1__Impl
	rule__D__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getDAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getGroup_2()); }
	(rule__D__Group_2__0)?
	{ after(grammarAccess.getDAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__D__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group_2__0__Impl
	rule__D__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getDAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getDAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
	(rule__PackageDeclaration__ElementsAssignment_3)*
	{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adeptness__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdeptnessAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getAdeptnessAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Imports__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportsAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringFileAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMonitoringFileAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringFile__MonitoringPlanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringFileAccess().getMonitoringPlanMonitoringPlanParserRuleCall_3_0()); }
		ruleMonitoringPlan
		{ after(grammarAccess.getMonitoringFileAccess().getMonitoringPlanMonitoringPlanParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringPlan__MonitoringVariablesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringPlanAccess().getMonitoringVariablesMonitoringVariableParserRuleCall_0()); }
		ruleMonitoringVariable
		{ after(grammarAccess.getMonitoringPlanAccess().getMonitoringVariablesMonitoringVariableParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMonitoringVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__MonitoringVariableDatatypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringVariableAccess().getMonitoringVariableDatatypeSig_typeParserRuleCall_5_0()); }
		ruleSig_type
		{ after(grammarAccess.getMonitoringVariableAccess().getMonitoringVariableDatatypeSig_typeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__MaxAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringVariableAccess().getMaxDOUBLEParserRuleCall_6_2_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getMonitoringVariableAccess().getMaxDOUBLEParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MonitoringVariable__MinAssignment_6_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMonitoringVariableAccess().getMinDOUBLEParserRuleCall_6_5_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getMonitoringVariableAccess().getMinDOUBLEParserRuleCall_6_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sig_type__Sig_typeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeBooleanKeyword_0_0()); }
		(
			{ before(grammarAccess.getSig_typeAccess().getSig_typeBooleanKeyword_0_0()); }
			'boolean'
			{ after(grammarAccess.getSig_typeAccess().getSig_typeBooleanKeyword_0_0()); }
		)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeBooleanKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sig_type__Sig_typeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeIntKeyword_1_0()); }
		(
			{ before(grammarAccess.getSig_typeAccess().getSig_typeIntKeyword_1_0()); }
			'int'
			{ after(grammarAccess.getSig_typeAccess().getSig_typeIntKeyword_1_0()); }
		)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeIntKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sig_type__Sig_typeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSig_typeAccess().getSig_typeDoubleKeyword_2_0()); }
		(
			{ before(grammarAccess.getSig_typeAccess().getSig_typeDoubleKeyword_2_0()); }
			'double'
			{ after(grammarAccess.getSig_typeAccess().getSig_typeDoubleKeyword_2_0()); }
		)
		{ after(grammarAccess.getSig_typeAccess().getSig_typeDoubleKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__SuperTypeAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getSuperTypeMonitoringFileCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getSignalAccess().getSuperTypeMonitoringFileQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getSignalAccess().getSuperTypeMonitoringFileQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getSignalAccess().getSuperTypeMonitoringFileCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__OracleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getOracleOracleParserRuleCall_4_0()); }
		ruleOracle
		{ after(grammarAccess.getSignalAccess().getOracleOracleParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOracleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOracleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Oracle__CheckAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOracleAccess().getCheckChecksParserRuleCall_3_0()); }
		ruleChecks
		{ after(grammarAccess.getOracleAccess().getCheckChecksParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChecksAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getChecksAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__ReferenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChecksAccess().getReferenceReferenceParserRuleCall_2_0()); }
		ruleReference
		{ after(grammarAccess.getChecksAccess().getReferenceReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__FailReasonAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChecksAccess().getFailReasonFailReasonParserRuleCall_3_0()); }
		ruleFailReason
		{ after(grammarAccess.getChecksAccess().getFailReasonFailReasonParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checks__DescriptionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChecksAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
		ruleDescription
		{ after(grammarAccess.getChecksAccess().getDescriptionDescriptionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDescriptionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDescriptionAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FailReason__ReasonAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFailReasonAccess().getReasonReasonParserRuleCall_1_0()); }
		ruleReason
		{ after(grammarAccess.getFailReasonAccess().getReasonReasonParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__HighPeakAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasonAccess().getHighPeakHighPeakParserRuleCall_0_0_0()); }
		ruleHighPeak
		{ after(grammarAccess.getReasonAccess().getHighPeakHighPeakParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__HighTimeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasonAccess().getHighTimeHighTimeParserRuleCall_0_1_0()); }
		ruleHighTime
		{ after(grammarAccess.getReasonAccess().getHighTimeHighTimeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__ConstDegAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasonAccess().getConstDegConstDegParserRuleCall_0_2_0()); }
		ruleConstDeg
		{ after(grammarAccess.getReasonAccess().getConstDegConstDegParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reason__XPeaksAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReasonAccess().getXPeaksXPeaksParserRuleCall_0_3_0()); }
		ruleXPeaks
		{ after(grammarAccess.getReasonAccess().getXPeaksXPeaksParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__CantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPeaksAccess().getCantDOUBLEParserRuleCall_1_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getXPeaksAccess().getCantDOUBLEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__NPeaksAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPeaksAccess().getNPeaksDOUBLEParserRuleCall_3_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getXPeaksAccess().getNPeaksDOUBLEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__TimeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPeaksAccess().getTimeINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getXPeaksAccess().getTimeINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XPeaks__UnitAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXPeaksAccess().getUnitTimeTypeParserRuleCall_6_0()); }
		ruleTimeType
		{ after(grammarAccess.getXPeaksAccess().getUnitTimeTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstDeg__CantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstDegAccess().getCantDOUBLEParserRuleCall_1_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getConstDegAccess().getCantDOUBLEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__CantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighTimeAccess().getCantDOUBLEParserRuleCall_1_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getHighTimeAccess().getCantDOUBLEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__TimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighTimeAccess().getTimeDOUBLEParserRuleCall_3_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getHighTimeAccess().getTimeDOUBLEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighTime__UnitAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighTimeAccess().getUnitTimeTypeParserRuleCall_4_0()); }
		ruleTimeType
		{ after(grammarAccess.getHighTimeAccess().getUnitTimeTypeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__HighPeak__CantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHighPeakAccess().getCantDOUBLEParserRuleCall_1_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getHighPeakAccess().getCantDOUBLEParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__UpperAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getUpperUpperParserRuleCall_0_0_0()); }
		ruleUpper
		{ after(grammarAccess.getReferenceAccess().getUpperUpperParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__LowerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getLowerLowerParserRuleCall_0_1_0()); }
		ruleLower
		{ after(grammarAccess.getReferenceAccess().getLowerLowerParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__RangeAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getRangeRangeParserRuleCall_0_2_0()); }
		ruleRange
		{ after(grammarAccess.getReferenceAccess().getRangeRangeParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__GapAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getGapGapParserRuleCall_0_3_0()); }
		ruleGap
		{ after(grammarAccess.getReferenceAccess().getGapGapParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Upper__Bound_uppAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpperAccess().getBound_uppBound_upParserRuleCall_1_0()); }
		ruleBound_up
		{ after(grammarAccess.getUpperAccess().getBound_uppBound_upParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Lower__Bound_lowerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLowerAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
		ruleBound_Down
		{ after(grammarAccess.getLowerAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Bound_lowerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
		ruleBound_Down
		{ after(grammarAccess.getRangeAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Range__Bound_uppAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeAccess().getBound_uppBound_upParserRuleCall_3_0()); }
		ruleBound_up
		{ after(grammarAccess.getRangeAccess().getBound_uppBound_upParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Bound_lowerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGapAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
		ruleBound_Down
		{ after(grammarAccess.getGapAccess().getBound_lowerBound_DownParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gap__Bound_uppAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGapAccess().getBound_uppBound_upParserRuleCall_3_0()); }
		ruleBound_up
		{ after(grammarAccess.getGapAccess().getBound_uppBound_upParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_upAccess().getValueDOUBLEParserRuleCall_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getBound_upAccess().getValueDOUBLEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_DownAccess().getValueDOUBLEParserRuleCall_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getBound_DownAccess().getValueDOUBLEParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__BoolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getBoolBParserRuleCall_0()); }
		ruleb
		{ after(grammarAccess.getBOOLEANAccess().getBoolBParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__DValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDValDParserRuleCall_0()); }
		ruled
		{ after(grammarAccess.getDOUBLEAccess().getDValDParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__TimeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeMilisecondsKeyword_0_0()); }
		(
			{ before(grammarAccess.getTimeTypeAccess().getTimeMilisecondsKeyword_0_0()); }
			'miliseconds'
			{ after(grammarAccess.getTimeTypeAccess().getTimeMilisecondsKeyword_0_0()); }
		)
		{ after(grammarAccess.getTimeTypeAccess().getTimeMilisecondsKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__TimeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeSecondsKeyword_1_0()); }
		(
			{ before(grammarAccess.getTimeTypeAccess().getTimeSecondsKeyword_1_0()); }
			'seconds'
			{ after(grammarAccess.getTimeTypeAccess().getTimeSecondsKeyword_1_0()); }
		)
		{ after(grammarAccess.getTimeTypeAccess().getTimeSecondsKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__TimeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeMinutesKeyword_2_0()); }
		(
			{ before(grammarAccess.getTimeTypeAccess().getTimeMinutesKeyword_2_0()); }
			'minutes'
			{ after(grammarAccess.getTimeTypeAccess().getTimeMinutesKeyword_2_0()); }
		)
		{ after(grammarAccess.getTimeTypeAccess().getTimeMinutesKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeType__TimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeTypeAccess().getTimeHoursKeyword_3_0()); }
		(
			{ before(grammarAccess.getTimeTypeAccess().getTimeHoursKeyword_3_0()); }
			'hours'
			{ after(grammarAccess.getTimeTypeAccess().getTimeHoursKeyword_3_0()); }
		)
		{ after(grammarAccess.getTimeTypeAccess().getTimeHoursKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
