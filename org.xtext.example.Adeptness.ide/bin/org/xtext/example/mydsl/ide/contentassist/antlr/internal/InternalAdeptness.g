/*
 * generated by Xtext 2.21.0
 */
grammar InternalAdeptness;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.AdeptnessGrammarAccess;

}
@parser::members {
	private AdeptnessGrammarAccess grammarAccess;

	public void setGrammarAccess(AdeptnessGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleAdeptness
entryRuleAdeptness
:
{ before(grammarAccess.getAdeptnessRule()); }
	 ruleAdeptness
{ after(grammarAccess.getAdeptnessRule()); } 
	 EOF 
;

// Rule Adeptness
ruleAdeptness 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdeptnessAccess().getElementsAssignment()); }
		(rule__Adeptness__ElementsAssignment)*
		{ after(grammarAccess.getAdeptnessAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractElement
entryRuleAbstractElement
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
		(rule__AbstractElement__Alternatives)
		{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getGroup()); }
		(rule__Import__Group__0)
		{ after(grammarAccess.getImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
		(rule__QualifiedNameWithWildcard__Group__0)
		{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignal
entryRuleSignal
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignalAccess().getGroup()); }
		(rule__Signal__Group__0)
		{ after(grammarAccess.getSignalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck_Static_upper_only
entryRuleCheck_Static_upper_only
:
{ before(grammarAccess.getCheck_Static_upper_onlyRule()); }
	 ruleCheck_Static_upper_only
{ after(grammarAccess.getCheck_Static_upper_onlyRule()); } 
	 EOF 
;

// Rule Check_Static_upper_only
ruleCheck_Static_upper_only 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getGroup()); }
		(rule__Check_Static_upper_only__Group__0)
		{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck_Static_lower_only
entryRuleCheck_Static_lower_only
:
{ before(grammarAccess.getCheck_Static_lower_onlyRule()); }
	 ruleCheck_Static_lower_only
{ after(grammarAccess.getCheck_Static_lower_onlyRule()); } 
	 EOF 
;

// Rule Check_Static_lower_only
ruleCheck_Static_lower_only 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getGroup()); }
		(rule__Check_Static_lower_only__Group__0)
		{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck_Range
entryRuleCheck_Range
:
{ before(grammarAccess.getCheck_RangeRule()); }
	 ruleCheck_Range
{ after(grammarAccess.getCheck_RangeRule()); } 
	 EOF 
;

// Rule Check_Range
ruleCheck_Range 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheck_RangeAccess().getGroup()); }
		(rule__Check_Range__Group__0)
		{ after(grammarAccess.getCheck_RangeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck_Gap
entryRuleCheck_Gap
:
{ before(grammarAccess.getCheck_GapRule()); }
	 ruleCheck_Gap
{ after(grammarAccess.getCheck_GapRule()); } 
	 EOF 
;

// Rule Check_Gap
ruleCheck_Gap 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheck_GapAccess().getGroup()); }
		(rule__Check_Gap__Group__0)
		{ after(grammarAccess.getCheck_GapAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclusiveBound
entryRuleInclusiveBound
:
{ before(grammarAccess.getInclusiveBoundRule()); }
	 ruleInclusiveBound
{ after(grammarAccess.getInclusiveBoundRule()); } 
	 EOF 
;

// Rule InclusiveBound
ruleInclusiveBound 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusiveBoundAccess().getGroup()); }
		(rule__InclusiveBound__Group__0)
		{ after(grammarAccess.getInclusiveBoundAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBound_up
entryRuleBound_up
:
{ before(grammarAccess.getBound_upRule()); }
	 ruleBound_up
{ after(grammarAccess.getBound_upRule()); } 
	 EOF 
;

// Rule Bound_up
ruleBound_up 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBound_upAccess().getGroup()); }
		(rule__Bound_up__Group__0)
		{ after(grammarAccess.getBound_upAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBound_Down
entryRuleBound_Down
:
{ before(grammarAccess.getBound_DownRule()); }
	 ruleBound_Down
{ after(grammarAccess.getBound_DownRule()); } 
	 EOF 
;

// Rule Bound_Down
ruleBound_Down 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBound_DownAccess().getGroup()); }
		(rule__Bound_Down__Group__0)
		{ after(grammarAccess.getBound_DownAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN
entryRuleBOOLEAN
:
{ before(grammarAccess.getBOOLEANRule()); }
	 ruleBOOLEAN
{ after(grammarAccess.getBOOLEANRule()); } 
	 EOF 
;

// Rule BOOLEAN
ruleBOOLEAN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEANAccess().getBoolAssignment()); }
		(rule__BOOLEAN__BoolAssignment)
		{ after(grammarAccess.getBOOLEANAccess().getBoolAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleb
entryRuleb
:
{ before(grammarAccess.getBRule()); }
	 ruleb
{ after(grammarAccess.getBRule()); } 
	 EOF 
;

// Rule b
ruleb 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBAccess().getAlternatives()); }
		(rule__B__Alternatives)
		{ after(grammarAccess.getBAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDValAssignment()); }
		(rule__DOUBLE__DValAssignment)
		{ after(grammarAccess.getDOUBLEAccess().getDValAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuled
entryRuled
:
{ before(grammarAccess.getDRule()); }
	 ruled
{ after(grammarAccess.getDRule()); } 
	 EOF 
;

// Rule d
ruled 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDAccess().getGroup()); }
		(rule__D__Group__0)
		{ after(grammarAccess.getDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup()); }
		(rule__DataType__Group__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration
:
{ before(grammarAccess.getPackageDeclarationRule()); }
	 rulePackageDeclaration
{ after(grammarAccess.getPackageDeclarationRule()); } 
	 EOF 
;

// Rule PackageDeclaration
rulePackageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getGroup()); }
		(rule__PackageDeclaration__Group__0)
		{ after(grammarAccess.getPackageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
		rulePackageDeclaration
		{ after(grammarAccess.getAbstractElementAccess().getPackageDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
		ruleType
		{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
		ruleImport
		{ after(grammarAccess.getAbstractElementAccess().getImportParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSignalParserRuleCall_1()); }
		ruleSignal
		{ after(grammarAccess.getTypeAccess().getSignalParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__B__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getBAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getBAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
	(rule__Import__ImportedNamespaceAssignment_1)
	{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
	('.*')?
	{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__0__Impl
	rule__Signal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getSignalKeyword_0()); }
	'signal'
	{ after(grammarAccess.getSignalAccess().getSignalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__1__Impl
	rule__Signal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getNameAssignment_1()); }
	(rule__Signal__NameAssignment_1)
	{ after(grammarAccess.getSignalAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__2__Impl
	rule__Signal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getSignalAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__3__Impl
	rule__Signal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCheck_static_upperAssignment_3()); }
	(rule__Signal__Check_static_upperAssignment_3)*
	{ after(grammarAccess.getSignalAccess().getCheck_static_upperAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__4__Impl
	rule__Signal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCheck_static_lowerAssignment_4()); }
	(rule__Signal__Check_static_lowerAssignment_4)*
	{ after(grammarAccess.getSignalAccess().getCheck_static_lowerAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__5__Impl
	rule__Signal__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCheck_rangeAssignment_5()); }
	(rule__Signal__Check_rangeAssignment_5)*
	{ after(grammarAccess.getSignalAccess().getCheck_rangeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__6__Impl
	rule__Signal__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getCheck_gapAssignment_6()); }
	(rule__Signal__Check_gapAssignment_6)*
	{ after(grammarAccess.getSignalAccess().getCheck_gapAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Signal__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignalAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getSignalAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check_Static_upper_only__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__0__Impl
	rule__Check_Static_upper_only__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getCheck_Static_UpperKeyword_0()); }
	'Check_Static_Upper'
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getCheck_Static_UpperKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__1__Impl
	rule__Check_Static_upper_only__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getNameAssignment_1()); }
	(rule__Check_Static_upper_only__NameAssignment_1)
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__2__Impl
	rule__Check_Static_upper_only__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__3__Impl
	rule__Check_Static_upper_only__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getInclusive_boundAssignment_3()); }
	(rule__Check_Static_upper_only__Inclusive_boundAssignment_3)
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getInclusive_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__4__Impl
	rule__Check_Static_upper_only__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getBound_upAssignment_4()); }
	(rule__Check_Static_upper_only__Bound_upAssignment_4)
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getBound_upAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_upper_only__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check_Static_lower_only__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__0__Impl
	rule__Check_Static_lower_only__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getCheck_Static_LowerKeyword_0()); }
	'Check_Static_Lower'
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getCheck_Static_LowerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__1__Impl
	rule__Check_Static_lower_only__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getNameAssignment_1()); }
	(rule__Check_Static_lower_only__NameAssignment_1)
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__2__Impl
	rule__Check_Static_lower_only__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__3__Impl
	rule__Check_Static_lower_only__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getInclusive_boundAssignment_3()); }
	(rule__Check_Static_lower_only__Inclusive_boundAssignment_3)
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getInclusive_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__4__Impl
	rule__Check_Static_lower_only__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getBound_lowAssignment_4()); }
	(rule__Check_Static_lower_only__Bound_lowAssignment_4)
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getBound_lowAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Static_lower_only__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check_Range__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__0__Impl
	rule__Check_Range__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getCheck_RangeKeyword_0()); }
	'Check_Range'
	{ after(grammarAccess.getCheck_RangeAccess().getCheck_RangeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__1__Impl
	rule__Check_Range__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getNameAssignment_1()); }
	(rule__Check_Range__NameAssignment_1)
	{ after(grammarAccess.getCheck_RangeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__2__Impl
	rule__Check_Range__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCheck_RangeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__3__Impl
	rule__Check_Range__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getInclusive_boundAssignment_3()); }
	(rule__Check_Range__Inclusive_boundAssignment_3)
	{ after(grammarAccess.getCheck_RangeAccess().getInclusive_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__4__Impl
	rule__Check_Range__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getBound_lowAssignment_4()); }
	(rule__Check_Range__Bound_lowAssignment_4)
	{ after(grammarAccess.getCheck_RangeAccess().getBound_lowAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__5__Impl
	rule__Check_Range__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getBound_upAssignment_5()); }
	(rule__Check_Range__Bound_upAssignment_5)
	{ after(grammarAccess.getCheck_RangeAccess().getBound_upAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Range__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_RangeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCheck_RangeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check_Gap__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__0__Impl
	rule__Check_Gap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getCheck_GapKeyword_0()); }
	'Check_Gap'
	{ after(grammarAccess.getCheck_GapAccess().getCheck_GapKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__1__Impl
	rule__Check_Gap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getNameAssignment_1()); }
	(rule__Check_Gap__NameAssignment_1)
	{ after(grammarAccess.getCheck_GapAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__2__Impl
	rule__Check_Gap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCheck_GapAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__3__Impl
	rule__Check_Gap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getInclusive_boundAssignment_3()); }
	(rule__Check_Gap__Inclusive_boundAssignment_3)
	{ after(grammarAccess.getCheck_GapAccess().getInclusive_boundAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__4__Impl
	rule__Check_Gap__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getBound_lowAssignment_4()); }
	(rule__Check_Gap__Bound_lowAssignment_4)
	{ after(grammarAccess.getCheck_GapAccess().getBound_lowAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__5__Impl
	rule__Check_Gap__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getBound_upAssignment_5()); }
	(rule__Check_Gap__Bound_upAssignment_5)
	{ after(grammarAccess.getCheck_GapAccess().getBound_upAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check_Gap__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheck_GapAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getCheck_GapAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveBound__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveBound__Group__0__Impl
	rule__InclusiveBound__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveBoundAccess().getInclusiveBoundKeyword_0()); }
	'inclusiveBound'
	{ after(grammarAccess.getInclusiveBoundAccess().getInclusiveBoundKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveBound__Group__1__Impl
	rule__InclusiveBound__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveBoundAccess().getNameAssignment_1()); }
	(rule__InclusiveBound__NameAssignment_1)
	{ after(grammarAccess.getInclusiveBoundAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveBound__Group__2__Impl
	rule__InclusiveBound__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveBoundAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getInclusiveBoundAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveBound__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveBoundAccess().getValueAssignment_3()); }
	(rule__InclusiveBound__ValueAssignment_3)
	{ after(grammarAccess.getInclusiveBoundAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_up__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_up__Group__0__Impl
	rule__Bound_up__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_upAccess().getBound_upKeyword_0()); }
	'bound_up'
	{ after(grammarAccess.getBound_upAccess().getBound_upKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_up__Group__1__Impl
	rule__Bound_up__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_upAccess().getNameAssignment_1()); }
	(rule__Bound_up__NameAssignment_1)
	{ after(grammarAccess.getBound_upAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_up__Group__2__Impl
	rule__Bound_up__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_upAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBound_upAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_up__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_upAccess().getValueAssignment_3()); }
	(rule__Bound_up__ValueAssignment_3)
	{ after(grammarAccess.getBound_upAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bound_Down__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_Down__Group__0__Impl
	rule__Bound_Down__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_DownAccess().getBound_downKeyword_0()); }
	'bound_down'
	{ after(grammarAccess.getBound_DownAccess().getBound_downKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_Down__Group__1__Impl
	rule__Bound_Down__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_DownAccess().getNameAssignment_1()); }
	(rule__Bound_Down__NameAssignment_1)
	{ after(grammarAccess.getBound_DownAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_Down__Group__2__Impl
	rule__Bound_Down__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_DownAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getBound_DownAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bound_Down__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBound_DownAccess().getValueAssignment_3()); }
	(rule__Bound_Down__ValueAssignment_3)
	{ after(grammarAccess.getBound_DownAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__D__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__0__Impl
	rule__D__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getDAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__1__Impl
	rule__D__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getDAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getGroup_2()); }
	(rule__D__Group_2__0)?
	{ after(grammarAccess.getDAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__D__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group_2__0__Impl
	rule__D__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getFullStopKeyword_2_0()); }
	'.'
	{ after(grammarAccess.getDAccess().getFullStopKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__D__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__D__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
	{ after(grammarAccess.getDAccess().getINTTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__0__Impl
	rule__DataType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
	'datatype'
	{ after(grammarAccess.getDataTypeAccess().getDatatypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
	(rule__DataType__NameAssignment_1)
	{ after(grammarAccess.getDataTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__0__Impl
	rule__PackageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__1__Impl
	rule__PackageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
	(rule__PackageDeclaration__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__2__Impl
	rule__PackageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__3__Impl
	rule__PackageDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
	(rule__PackageDeclaration__ElementsAssignment_3)*
	{ after(grammarAccess.getPackageDeclarationAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Adeptness__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdeptnessAccess().getElementsAbstractElementParserRuleCall_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getAdeptnessAccess().getElementsAbstractElementParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
		ruleQualifiedNameWithWildcard
		{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Check_static_upperAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getCheck_static_upperCheck_Static_upper_onlyParserRuleCall_3_0()); }
		ruleCheck_Static_upper_only
		{ after(grammarAccess.getSignalAccess().getCheck_static_upperCheck_Static_upper_onlyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Check_static_lowerAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getCheck_static_lowerCheck_Static_lower_onlyParserRuleCall_4_0()); }
		ruleCheck_Static_lower_only
		{ after(grammarAccess.getSignalAccess().getCheck_static_lowerCheck_Static_lower_onlyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Check_rangeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getCheck_rangeCheck_RangeParserRuleCall_5_0()); }
		ruleCheck_Range
		{ after(grammarAccess.getSignalAccess().getCheck_rangeCheck_RangeParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Check_gapAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSignalAccess().getCheck_gapCheck_GapParserRuleCall_6_0()); }
		ruleCheck_Gap
		{ after(grammarAccess.getSignalAccess().getCheck_gapCheck_GapParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Inclusive_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
		ruleInclusiveBound
		{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_upper_only__Bound_upAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_upper_onlyAccess().getBound_upBound_upParserRuleCall_4_0()); }
		ruleBound_up
		{ after(grammarAccess.getCheck_Static_upper_onlyAccess().getBound_upBound_upParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Inclusive_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
		ruleInclusiveBound
		{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Static_lower_only__Bound_lowAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_Static_lower_onlyAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
		ruleBound_Down
		{ after(grammarAccess.getCheck_Static_lower_onlyAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_RangeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheck_RangeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Inclusive_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_RangeAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
		ruleInclusiveBound
		{ after(grammarAccess.getCheck_RangeAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Bound_lowAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_RangeAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
		ruleBound_Down
		{ after(grammarAccess.getCheck_RangeAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Range__Bound_upAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_RangeAccess().getBound_upBound_upParserRuleCall_5_0()); }
		ruleBound_up
		{ after(grammarAccess.getCheck_RangeAccess().getBound_upBound_upParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_GapAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheck_GapAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Inclusive_boundAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_GapAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
		ruleInclusiveBound
		{ after(grammarAccess.getCheck_GapAccess().getInclusive_boundInclusiveBoundParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Bound_lowAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_GapAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
		ruleBound_Down
		{ after(grammarAccess.getCheck_GapAccess().getBound_lowBound_DownParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check_Gap__Bound_upAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheck_GapAccess().getBound_upBound_upParserRuleCall_5_0()); }
		ruleBound_up
		{ after(grammarAccess.getCheck_GapAccess().getBound_upBound_upParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveBoundAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInclusiveBoundAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveBound__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveBoundAccess().getValueBOOLEANParserRuleCall_3_0()); }
		ruleBOOLEAN
		{ after(grammarAccess.getInclusiveBoundAccess().getValueBOOLEANParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_upAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBound_upAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_up__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_upAccess().getValueDOUBLEParserRuleCall_3_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getBound_upAccess().getValueDOUBLEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_DownAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBound_DownAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bound_Down__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBound_DownAccess().getValueDOUBLEParserRuleCall_3_0()); }
		ruleDOUBLE
		{ after(grammarAccess.getBound_DownAccess().getValueDOUBLEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BOOLEAN__BoolAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBOOLEANAccess().getBoolBParserRuleCall_0()); }
		ruleb
		{ after(grammarAccess.getBOOLEANAccess().getBoolBParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOUBLE__DValAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDValDParserRuleCall_0()); }
		ruled
		{ after(grammarAccess.getDOUBLEAccess().getDValDParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDeclaration__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
		ruleAbstractElement
		{ after(grammarAccess.getPackageDeclarationAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
